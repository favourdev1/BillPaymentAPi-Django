{
	"info": {
		"_postman_id": "bill-payment-api-collection",
		"name": "Bill Payment API",
		"description": "A comprehensive Django REST API for bill payment management with user authentication, JWT tokens, and password reset functionality.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "bill-payment-api"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Registration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"password\": \"{{user_password}}\",\n    \"password_confirm\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register",
								""
							]
						},
						"description": "Register a new user account. Returns user data and JWT tokens upon successful registration."
					},
					"response": []
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.tokens) {",
									"        pm.environment.set('access_token', responseJson.tokens.access);",
									"        pm.environment.set('refresh_token', responseJson.tokens.refresh);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login",
								""
							]
						},
						"description": "Authenticate user and receive JWT tokens. Rate limited to 5 requests per minute."
					},
					"response": []
				},
				{
					"name": "User Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/logout/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout",
								""
							]
						},
						"description": "Logout user by blacklisting the refresh token. Requires authentication."
					},
					"response": []
				}
			]
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile",
								""
							]
						},
						"description": "Retrieve the authenticated user's profile information."
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/profile/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"profile",
								""
							]
						},
						"description": "Update the authenticated user's profile information."
					},
					"response": []
				}
			]
		},
		{
			"name": "Password Reset",
			"item": [
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/forgot-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password",
								""
							]
						},
						"description": "Request a password reset email. Rate limited to 3 requests per minute."
					},
					"response": []
				},
				{
					"name": "Verify Reset Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"token\": \"{{reset_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verify-reset-token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"verify-reset-token",
								""
							]
						},
						"description": "Verify if a password reset token is valid. Rate limited to 10 requests per minute."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{user_email}}\",\n    \"token\": \"{{reset_token}}\",\n    \"new_password\": \"{{new_password}}\",\n    \"confirm_password\": \"{{new_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/reset-password/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password",
								""
							]
						},
						"description": "Reset user password using a valid reset token. Rate limited to 3 requests per minute."
					},
					"response": []
				}
			]
		},
		{
			"name": "JWT Token Management",
			"item": [
				{
					"name": "Obtain JWT Token Pair",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('access_token', responseJson.access);",
									"    pm.environment.set('refresh_token', responseJson.refresh);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{user_email}}\",\n    \"password\": \"{{user_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								""
							]
						},
						"description": "Obtain JWT access and refresh token pair using username and password."
					},
					"response": []
				},
				{
					"name": "Refresh JWT Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    pm.environment.set('access_token', responseJson.access);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/refresh/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"refresh",
								""
							]
						},
						"description": "Refresh the JWT access token using a valid refresh token."
					},
					"response": []
				},
				{
					"name": "Verify JWT Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{access_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/token/verify/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"token",
								"verify",
								""
							]
						},
						"description": "Verify if a JWT token is valid and not expired."
					},
					"response": []
				}
			]
		},
		{
			"name": "API Documentation",
			"item": [
				{
					"name": "Swagger UI Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/docs/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"docs",
								""
							]
						},
						"description": "Interactive Swagger UI API documentation."
					},
					"response": []
				},
				{
					"name": "ReDoc Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/redoc/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"redoc",
								""
							]
						},
						"description": "ReDoc API documentation."
					},
					"response": []
				},
				{
					"name": "OpenAPI Schema",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/schema/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"schema",
								""
							]
						},
						"description": "OpenAPI schema in JSON format."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Pre-request script for the entire collection",
					"// You can add global pre-request logic here"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for the entire collection",
					"// You can add global test logic here"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://127.0.0.1:8000",
			"type": "string",
			"description": "Base URL for the API (local development)"
		},
		{
			"key": "user_email",
			"value": "test@example.com",
			"type": "string",
			"description": "Test user email for authentication"
		},
		{
			"key": "user_password",
			"value": "TestPassword123!",
			"type": "string",
			"description": "Test user password for authentication"
		},
		{
			"key": "new_password",
			"value": "NewPassword123!",
			"type": "string",
			"description": "New password for password reset testing"
		},
		{
			"key": "reset_token",
			"value": "your-reset-token-here",
			"type": "string",
			"description": "Password reset token (obtained from email)"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string",
			"description": "JWT access token (automatically set after login)"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string",
			"description": "JWT refresh token (automatically set after login)"
		}
	]
}